version: 0.2

phases:
  install:
    commands:
      - echo Logging in to Docker Hub
      - echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI_APP=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_APP
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 2-7 | tr -d '.,<>#$%')
      - if [ -z "$COMMIT_HASH" ]; then IMAGE_TAG=latest; else IMAGE_TAG=$COMMIT_HASH; fi
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image..
      - docker build -t $REPOSITORY_URI_APP:latest .
      - docker tag $REPOSITORY_URI_APP:latest $REPOSITORY_URI_APP:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI_APP:latest
      - docker push $REPOSITORY_URI_APP:$IMAGE_TAG
      - printf '[{"name":"light-source-research-stage","imageUri":"%s"}]' $REPOSITORY_URI_APP:$IMAGE_TAG > imagedefinitions.json
     # - printf '[{"name":$ECR_REPO,"imageUri":"%s"}]' $REPOSITORY_URI_APP:$IMAGE_TAG > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI_APP:$IMAGE_TAG > imageDetail.json
      - cp imageDetail.json ..
      - cp imagedefinitions.json ..

artifacts:
  files:
    - 'image*.json'
    - 'appspec.yaml'
    - 'taskdef.json'
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imagedefinitions.json

